<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fl.web.dao.store.IStoreOrderDao">

    <resultMap type="TStoreOrder" id="storeOrderMap">
        <result property="id" column="id"/>
        <result property="storeNo" column="store_no"/>
        <result property="companyCode" column="company_code"/>
        <result property="company" column="company"/>
        <result property="projectCode" column="project_code"/>
        <result property="projectName" column="projectName"/>
        <result property="optDept" column="opt_dept"/>
        <result property="optName" column="opt_name"/>
        <result property="optDate" column="opt_date"/>
        <result property="note" column="note"/>
        <result property="state" column="state"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <select id="queryStoreOrderList" resultMap="storeOrderMap" parameterType="StoreOrder">
        select
        h.id,
        h.store_no,
        h.company_code,
        h.company,
        h.project_code,
        d.name projectName,
        h.opt_dept,
        h.opt_name,
        h.opt_date,
        h.note
        from
        store_order h
        left join data_dictionary d on h.project_code = d.code
        and d.group_code = 'HC008'
        where h.status != '003'
        <if test="companyCode != null and companyCode!='' ">
            and h.company_code = #{companyCode}
        </if>
        <if test="projectCode != null and projectCode!='' ">
            and h.project_code = #{projectCode}
        </if>
        <if test="storeNo != null">
            and h.store_no like #{storeNo}
        </if>
        <if test="state != null and state!=''  ">
            and h.state = #{state}
        </if>
        <if test="optType != null and optType!='' ">
            and h.opt_type = #{optType}
        </if>
        <if test="storeType != null and storeType!='' ">
            and h.store_type = #{storeType}
        </if>
        order by h.store_no desc
    </select>

    <select id="getStoreOrderByStoreNo" resultType="TStoreOrder">
        select
        h.id,
        h.store_no storeNo,
        h.company_code companyCode,
        h.company,
        h.project_code projectCode,
        d.name projectName,
        h.opt_dept optDept,
        h.opt_name optName,
        h.opt_date optDate,
        h.note
        from
        store_order h
        left join data_dictionary d on h.project_code = d.code
        and d.group_code = 'HC008'
        where h.status != '003' and h.store_no=#{storeNo}
    </select>


    <insert id="saveStoreOrder" parameterType="TStoreOrder">
        insert into store_order (
        id,
        store_no,
        company_code,
        company,
        project_code,
        opt_dept,
        opt_name,
        opt_date,
        state,
        opt_type,
        store_type,
        note,
        status,
        create_by,
        create_date)
        values (
        #{id},
        #{storeNo},
        #{companyCode},
        #{company},
        #{projectCode},
        #{optDept},
        #{optName},
        #{optDate},
        #{state},
        #{optType},
        #{storeType},
        #{note},
        #{status},
        #{createBy},
        #{createDate})
    </insert>

    <select id="checkStoreOrderStatus" resultType="java.lang.Integer">
        select count(1) from store_order where id=#{id}  and state!=#{state} and status!='003'
    </select>

    <select id="checkStoreOrderStatusBatch" resultType="java.lang.Integer">
        select count(1) from store_order where id in
        <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and state!=#{state} and status!='003'
    </select>

    <update id="updateStoreOrderStatusBatch" parameterType="java.util.Map">
        update store_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="state != null">
                state = #{state},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </trim>
        <where>
            id in
            <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </update>

    <update id="updateStoreOrderStatus" parameterType="java.util.Map">
        update store_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="state != null">
                state = #{state},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </trim>
        <where>
            id =#{id}
        </where>
    </update>

</mapper>