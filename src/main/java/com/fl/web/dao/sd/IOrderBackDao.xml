<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fl.web.dao.sd.IOrderBackDao">

    <resultMap type="TOrderBack" id="orderBackMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="itemId" column="item_id"/>
        <result property="itemNo" column="item_no"/>
        <result property="maktl" column="maktl"/>
        <result property="maktlName" column="maktlName"/>
        <result property="matnr" column="matnr"/>
        <result property="maktx" column="maktx"/>
        <result property="norms" column="norms"/>
        <result property="unit" column="unit"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="qualityType" column="quality_type"/>
        <result property="backNum" column="back_num"/>
        <result property="state" column="state"/>
        <result property="reason" column="reason"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>


    <select id="queryOrderBackList" resultMap="orderBackMap" parameterType="OrderBack">
        select
        t.id,
        t.order_no,
        t.item_id,
        t.item_no,
        t.maktl,
        mt.NAME maktlName,
        t.matnr,
        t.maktx,
        t.norms,
        t.unit,
        t.manufacturer,
        t.quality_type,
        t.back_num,
        t.create_date,
        t.state,
        t.reason
        from
        order_back t
        left join mara_type mt on t.maktl = mt.maktl
        where t.status!='003'
        <if test="state != null and state!='' ">
            and t.state = #{state}
        </if>
        <if test="orderNo != null">
            and t.order_no like #{orderNo}
        </if>
        <if test="matnr != null">
            and t.matnr like #{matnr}
        </if>
        <if test="maktx != null">
            and t.maktx like #{maktx}
        </if>
        <if test="norms != null">
            and t.norms like #{norms}
        </if>
        order by t.order_no desc
    </select>

    <insert id="saveOrderBackBatch" parameterType="java.util.List">
        insert into order_back
        (id,order_no,item_id,item_no,maktl,matnr,maktx,norms,unit,manufacturer,quality_type,back_num,state,reason,status,create_by,create_date)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.orderNo},#{item.itemId},#{item.itemNo},#{item.maktl},#{item.matnr},#{item.maktx},#{item.norms},#{item.unit},
            #{item.manufacturer},#{item.qualityType},#{item.backNum},#{item.state},#{item.reason},#{item.status},
            #{item.createBy},#{item.createDate})
        </foreach>
    </insert>

    <select id="checkOrderBackState" resultType="java.lang.Integer">
        select count(1) from order_back where id=#{id}  and state!=#{state} and status!='003'
    </select>

    <select id="checkOrderBackStateBatch" resultType="java.lang.Integer">
        select count(1) from order_back where id in
        <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and state!=#{state} and status!='003'
    </select>

    <update id="updateOrderBackState" parameterType="java.util.Map">
        update order_back
        <trim prefix="SET" suffixOverrides=",">
            <if test="state != null">
                state = #{state},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </trim>
        <where>
            id in
            <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </update>

</mapper>