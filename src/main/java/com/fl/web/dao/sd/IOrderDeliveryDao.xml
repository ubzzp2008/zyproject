<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fl.web.dao.sd.IOrderDeliveryDao">

    <resultMap type="TOrderDelivery" id="deliveryMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="companyCode" column="companyCode"/>
        <result property="company" column="company"/>
        <result property="supplierCode" column="supplierCode"/>
        <result property="supplierName" column="supplierName"/>
        <result property="orderDate" column="orderDate"/>
        <result property="projectCode" column="projectCode"/>
        <result property="projectName" column="projectName"/>
        <result property="reqDept" column="reqDept"/>
        <result property="reqName" column="reqName"/>
        <result property="purchaser" column="purchaser"/>
        <result property="itemId" column="item_id"/>
        <result property="itemNo" column="item_no"/>
        <result property="maktl" column="maktl"/>
        <result property="maktlName" column="maktlName"/>
        <result property="matnr" column="matnr"/>
        <result property="maktx" column="maktx"/>
        <result property="norms" column="norms"/>
        <result property="unit" column="unit"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="qualityType" column="quality_type"/>
        <result property="orderNum" column="order_num"/>
        <result property="num" column="num"/>
        <result property="storeNum" column="store_num"/>
        <result property="reqId" column="req_id"/>
        <result property="state" column="state"/>
        <result property="deliveryFlag" column="delivery_flag"/>
        <result property="censorFlag" column="censor_flag"/>
        <result property="note" column="note"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateDate" column="update_date"/>
        <result property="backBy" column="back_by"/>
        <result property="backDate" column="back_date"/>
        <result property="backReason" column="back_reason"/>
    </resultMap>


    <select id="queryOrderDeliveryList" resultMap="deliveryMap" parameterType="OrderDelivery">
        select
        t.id,
        oh.company_code companyCode,
        oh.company,
        oh.supplier_code supplierCode,
        oh.supplier_name supplierName,
        oh.order_date orderDate,
        oh.project_code projectCode,
        d.name projectName,
        oh.req_dept reqDept,
        oh.req_name reqName,
        oh.purchaser,
        t.order_no,
        t.item_id,
        t.item_no,
        t.maktl,
        mt.NAME maktlName,
        t.matnr,
        t.maktx,
        t.norms,
        t.unit,
        t.manufacturer,
        t.quality_type,
        t.order_num,
        t.num,
        t.store_num,
        t.req_id,
        t.create_date,
        u.realname create_by,
        t.state,
        t.delivery_flag,
        t.censor_flag,
        t.note,
        t.back_by,
        t.back_date,
        t.back_reason
        from
        order_delivery t
        left join order_head oh on oh.order_no=t.order_no
        left join mara_type mt on t.maktl = mt.maktl
        left join data_dictionary d on oh.project_code=d.code and d.group_code='HC008'
        left join t_user_info u on t.create_by=u.username
        where t.status!='003'
        <if test="censorFlag != null and censorFlag!='' ">
            and t.censor_flag = #{censorFlag}
        </if>
        <if test="deliveryFlag != null and deliveryFlag!='' ">
            and t.delivery_flag = #{deliveryFlag}
        </if>
        <if test="state != null and state!='' ">
            and t.state = #{state}
        </if>
        <if test="orderNo != null">
            and t.order_no like #{orderNo}
        </if>
        <if test="matnr != null">
            and t.matnr like #{matnr}
        </if>
        <if test="maktx != null">
            and t.maktx like #{maktx}
        </if>
        <if test="norms != null">
            and t.norms like #{norms}
        </if>
        <if test="companyCode != null and companyCode!='' ">
            and oh.company_code = #{companyCode}
        </if>
        <if test="projectCode != null and projectCode!='' ">
            and oh.project_code = #{projectCode}
        </if>
        order by t.order_no desc
    </select>

    <insert id="saveOrderDeliveryBatch" parameterType="java.util.List">
        insert into order_delivery
        (id,order_no,item_id,item_no,maktl,matnr,maktx,norms,unit,manufacturer,quality_type,order_num,num,store_num,req_id,
        state,delivery_flag,censor_flag,note,status,create_by,create_date)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.orderNo},#{item.itemId},#{item.itemNo},#{item.maktl},#{item.matnr},#{item.maktx},#{item.norms},#{item.unit},
            #{item.manufacturer},#{item.qualityType},#{item.orderNum},#{item.num},#{item.storeNum},#{item.reqId},#{item.state},
            #{item.deliveryFlag},#{item.censorFlag},#{item.note},#{item.status},
            #{item.createBy},#{item.createDate})
        </foreach>
    </insert>


    <select id="checkDeliveryStatus" resultType="java.lang.Integer">
        select count(1) from order_delivery where id=#{id}  and state!=#{state} and status!='003'
    </select>

    <select id="checkDeliveryStatusBatch" resultType="java.lang.Integer">
        select count(1) from order_delivery where id in
        <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and state!=#{state} and status!='003'
    </select>

    <update id="updateOrderDeliveryBatch" parameterType="java.util.List">
        <foreach close="" collection="list" index="index" item="item" open="" separator=";">
            update order_delivery
            <trim prefix="set" suffixOverrides=",">
                <if test="item.state != null">
                    state = #{item.state},
                </if>
                <if test="item.backBy != null">
                    back_by = #{item.backBy},
                </if>
                <if test="item.backDate != null">
                    back_date = #{item.backDate},
                </if>
                <if test="item.backReason != null">
                    back_reason = #{item.backReason},
                </if>
                <if test="item.storeNum != null">
                    store_num = #{item.storeNum},
                </if>
                <if test="item.status != null">
                    status = #{item.status},
                </if>
                <if test="item.updateBy != null">
                    update_by = #{item.updateBy},
                </if>
                <if test="item.updateDate != null">
                    update_date = #{item.updateDate},
                </if>
            </trim>
            <where>
                id = #{item.id}
            </where>
        </foreach>
    </update>

    <update id="updateOrderDelivery" parameterType="TOrderDelivery">
        update order_delivery
        <trim prefix="set" suffixOverrides=",">
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </trim>
        <where>
            id = #{id}
        </where>
    </update>

    <update id="updateDeliveryStatusBatch" parameterType="java.util.Map">
        update order_delivery
        <trim prefix="SET" suffixOverrides=",">
            <if test="state != null">
                state = #{state},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </trim>
        <where>
            id in
            <foreach collection="idList" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </update>

</mapper>